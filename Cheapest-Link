public class MyProgram extends ConsoleProgram
{
    public void run()
    {

        int[][] time = {
            {0, 6, 12, 5},
            {6, 0, 8, 9},
            {12, 8, 0, 13},
            {5, 9, 13, 0}
        };
        

        String[] names = {"Home", "Aldo", "Butch", "Cassidy"};
        
    
        int[][] connections = new int[4][2];
        int connectioncount = 0;
        

        int[] connectedto = {0, 0, 0, 0};
        

        while (connectioncount < 4) {
            int besttime = 999;
            int place1 = -1;
            int place2 = -1;

            for (int i = 0; i < 4; i++) {
                for (int j = i + 1; j < 4; j++) {
                    if (connectedto[i] < 2 && connectedto[j] < 2 &&
                    !willMakeLoop(connections, connectioncount, i, j)) {
                        
                        if (time[i][j] < besttime) {
                        besttime = time[i][j];
                        place1 = i;
                        place2 = j;
                        }
                    }
                }
            }
            
    
            if (place1 != -1 && place2 != -1) {
                connections[connectioncount][0] = place1;
                connections[connectioncount][1] = place2;
                connectedto[place1]++;
                connectedto[place2]++;
                connectioncount++;
            } else {
                break;
            }
        }


        int[] route = new int[4];
        boolean[] visited = {false, false, false, false};
        route[0] = 0; // start at home
        visited[0] = true;
        
    
        for (int i = 1; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                int a = connections[j][0];
                int b = connections[j][1];
                
                if (a == route[i-1] && !visited[b]) {
                    route[i] = b;
                    visited[b] = true;
                    break;
                }
                
                if (b == route[i-1] && !visited[a]) {
                    route[i] = a;
                    visited[a] = true;
                    break;
                }
            }
        }
        
     
        String fullroute = "";
        int totaltime = 0;
        
        for (int i = 0; i < 3; i++) {
            fullroute += names[route[i]] + " → ";
            totaltime += time[route[i]][route[i+1]];
        }
        
        fullroute += names[route[3]] + " → Home";
        totaltime += time[route[3]][0];
        
        System.out.println("Best Route: " + fullroute);
        System.out.println("Total Time: " + totaltime);
    }
    
    public boolean willMakeLoop (int[][] connections, int count, int from, int to) {
        boolean[] visited = new boolean[4];
        return checkloop(connections, count, from, to, visited);
    }
    
    public boolean checkloop (int[][] connections, int count, int current, int target, boolean[] visited) {
        if (current == target) return true;
        visited[current] = true;
        
        for (int i = 0; i < count; i++) {
            int a = connections[i][0];
            int b = connections[i][1];
            
            if (a == current && !visited[b]) {
                if (checkloop(connections, count, b, target, visited)) return true;
            }
            
            if (b == current && !visited[a]) {
                if (checkloop(connections, count, a, target, visited)) return true;
            }
        }
        
        return false;
        
    }
}
